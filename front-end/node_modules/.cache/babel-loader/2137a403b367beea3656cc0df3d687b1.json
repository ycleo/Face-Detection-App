{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticlesInfecter = void 0;\n\nvar ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\n\nvar ParticlesInfecter = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(ParticlesInfecter, _ParticlesInteractorB);\n\n  var _super = _createSuper(ParticlesInfecter);\n\n  function ParticlesInfecter(container) {\n    _classCallCheck(this, ParticlesInfecter);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(ParticlesInfecter, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var _a, _b;\n\n      var infOptions = this.container.actualOptions;\n      return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact(p1, delta) {\n      var _a, _b;\n\n      var infecter = this.container.infecter;\n\n      if (!infecter) {\n        return;\n      }\n\n      infecter.updateInfection(p1, delta.value);\n\n      if (p1.infection.stage === undefined) {\n        return;\n      }\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var infectionOptions = options.infection;\n\n      if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n        return;\n      }\n\n      var infectionStage1 = infectionOptions.stages[p1.infection.stage];\n      var pxRatio = container.retina.pixelRatio;\n      var radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n      var pos = p1.getPosition();\n      var infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n      var query = container.particles.quadTree.queryCircle(pos, radius);\n      var infections = infectionStage1.rate;\n      var neighbors = query.length;\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n          var infP2 = p2;\n\n          if (infP2 === p1 || infP2.destroyed || infP2.spawning || !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n            continue;\n          }\n\n          if (Math.random() < infections / neighbors) {\n            if (infP2.infection.stage === undefined) {\n              infecter.startInfection(infP2, infectedStage1);\n            } else if (infP2.infection.stage < p1.infection.stage) {\n              infecter.updateInfectionStage(infP2, infectedStage1);\n            } else if (infP2.infection.stage > p1.infection.stage) {\n              var infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n              var infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n              infecter.updateInfectionStage(p1, infectedStage2);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return ParticlesInfecter;\n}(ParticlesInteractorBase_1.ParticlesInteractorBase);\n\nexports.ParticlesInfecter = ParticlesInfecter;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Plugins/Infection/ParticlesInfecter.js"],"names":["Object","defineProperty","exports","value","ParticlesInfecter","ParticlesInteractorBase_1","require","container","_a","_b","infOptions","actualOptions","infection","enable","p1","delta","infecter","updateInfection","stage","undefined","options","infectionOptions","stages","length","infectionStage1","pxRatio","retina","pixelRatio","radius","getRadius","pos","getPosition","infectedStage1","infectedStage","query","particles","quadTree","queryCircle","infections","rate","neighbors","p2","infP2","destroyed","spawning","Math","random","startInfection","updateInfectionStage","infectionStage2","infectedStage2","ParticlesInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticlesInfecter = void 0;\nconst ParticlesInteractorBase_1 = require(\"../../Core/ParticlesInteractorBase\");\nclass ParticlesInfecter extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        var _a, _b;\n        const infOptions = this.container.actualOptions;\n        return (_b = (_a = infOptions === null || infOptions === void 0 ? void 0 : infOptions.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter = this.container.infecter;\n        if (!infecter) {\n            return;\n        }\n        infecter.updateInfection(p1, delta.value);\n        if (p1.infection.stage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.actualOptions;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[p1.infection.stage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.getRadius() * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infection.stage;\n        const query = container.particles.quadTree.queryCircle(pos, radius);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            const infP2 = p2;\n            if (infP2 === p1 ||\n                infP2.destroyed ||\n                infP2.spawning ||\n                !(infP2.infection.stage === undefined || infP2.infection.stage !== p1.infection.stage)) {\n                continue;\n            }\n            if (Math.random() < infections / neighbors) {\n                if (infP2.infection.stage === undefined) {\n                    infecter.startInfection(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage < p1.infection.stage) {\n                    infecter.updateInfectionStage(infP2, infectedStage1);\n                }\n                else if (infP2.infection.stage > p1.infection.stage) {\n                    const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infP2.infection.stage;\n                    infecter.updateInfectionStage(p1, infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.ParticlesInfecter = ParticlesInfecter;\n"]},"metadata":{},"sourceType":"script"}