{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nvar Infecter = /*#__PURE__*/function () {\n  function Infecter(container) {\n    _classCallCheck(this, Infecter);\n\n    this.container = container;\n  }\n\n  _createClass(Infecter, [{\n    key: \"startInfection\",\n    value: function startInfection(particle, stage) {\n      var options = this.container.actualOptions,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      particle.infection.delay = 0;\n      particle.infection.delayStage = stage;\n    }\n  }, {\n    key: \"updateInfectionStage\",\n    value: function updateInfectionStage(particle, stage) {\n      var options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n      if (stage > stagesCount || stage < 0 || particle.infection.stage !== undefined && particle.infection.stage > stage) {\n        return;\n      }\n\n      particle.infection.stage = stage;\n      particle.infection.time = 0;\n    }\n  }, {\n    key: \"updateInfection\",\n    value: function updateInfection(particle, delta) {\n      var options = this.container.actualOptions,\n          infection = options.infection,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n      if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n        var stage = particle.infection.delayStage;\n\n        if (stage > stagesCount || stage < 0) {\n          return;\n        }\n\n        if (particle.infection.delay >= infection.delay * 1000) {\n          particle.infection.stage = stage;\n          particle.infection.time = 0;\n          delete particle.infection.delay;\n          delete particle.infection.delayStage;\n        } else {\n          particle.infection.delay += delta;\n        }\n      } else {\n        delete particle.infection.delay;\n        delete particle.infection.delayStage;\n      }\n\n      if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n        var infectionStage = stages[particle.infection.stage];\n\n        if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n          if (particle.infection.time > infectionStage.duration * 1000) {\n            this.nextInfectionStage(particle);\n          } else {\n            particle.infection.time += delta;\n          }\n        } else {\n          particle.infection.time += delta;\n        }\n      } else {\n        delete particle.infection.stage;\n        delete particle.infection.time;\n      }\n    }\n  }, {\n    key: \"nextInfectionStage\",\n    value: function nextInfectionStage(particle) {\n      var options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n      if (stagesCount <= 0 || particle.infection.stage === undefined) {\n        return;\n      }\n\n      particle.infection.time = 0;\n\n      if (stagesCount <= ++particle.infection.stage) {\n        if (options.infection.cure) {\n          delete particle.infection.stage;\n          delete particle.infection.time;\n          return;\n        } else {\n          particle.infection.stage = 0;\n          particle.infection.time = 0;\n        }\n      }\n    }\n  }]);\n\n  return Infecter;\n}();\n\nexports.Infecter = Infecter;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Plugins/Infection/Infecter.js"],"names":["Object","defineProperty","exports","value","Infecter","container","particle","stage","options","actualOptions","stages","infection","stagesCount","length","delay","delayStage","undefined","time","delta","infectionStage","duration","nextInfectionStage","cure"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    startInfection(particle, stage) {\n        const options = this.container.actualOptions, stages = options.infection.stages, stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        particle.infection.delay = 0;\n        particle.infection.delayStage = stage;\n    }\n    updateInfectionStage(particle, stage) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stage > stagesCount ||\n            stage < 0 ||\n            (particle.infection.stage !== undefined && particle.infection.stage > stage)) {\n            return;\n        }\n        particle.infection.stage = stage;\n        particle.infection.time = 0;\n    }\n    updateInfection(particle, delta) {\n        const options = this.container.actualOptions, infection = options.infection, stages = options.infection.stages, stagesCount = stages.length;\n        if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n            const stage = particle.infection.delayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (particle.infection.delay >= infection.delay * 1000) {\n                particle.infection.stage = stage;\n                particle.infection.time = 0;\n                delete particle.infection.delay;\n                delete particle.infection.delayStage;\n            }\n            else {\n                particle.infection.delay += delta;\n            }\n        }\n        else {\n            delete particle.infection.delay;\n            delete particle.infection.delayStage;\n        }\n        if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n            const infectionStage = stages[particle.infection.stage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (particle.infection.time > infectionStage.duration * 1000) {\n                    this.nextInfectionStage(particle);\n                }\n                else {\n                    particle.infection.time += delta;\n                }\n            }\n            else {\n                particle.infection.time += delta;\n            }\n        }\n        else {\n            delete particle.infection.stage;\n            delete particle.infection.time;\n        }\n    }\n    nextInfectionStage(particle) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || particle.infection.stage === undefined) {\n            return;\n        }\n        particle.infection.time = 0;\n        if (stagesCount <= ++particle.infection.stage) {\n            if (options.infection.cure) {\n                delete particle.infection.stage;\n                delete particle.infection.time;\n                return;\n            }\n            else {\n                particle.infection.stage = 0;\n                particle.infection.time = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"]},"metadata":{},"sourceType":"script"}