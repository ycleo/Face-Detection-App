{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\n\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue > optionsValue) {\n    var size = particleValue + (modeValue - optionsValue) * ratio;\n    return Utils_1.clamp(size, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _size = particleValue - (optionsValue - modeValue) * ratio;\n\n    return Utils_1.clamp(_size, modeValue, particleValue);\n  }\n}\n\nvar Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n\n  var _super = _createSuper(Bubbler);\n\n  function Bubbler(container) {\n    _classCallCheck(this, Bubbler);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouse = container.interactivity.mouse;\n      var events = options.interactivity.events;\n      var divs = events.onDiv;\n      var divBubble = Utils_1.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return Utils_1.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!particle.bubble.inRange || force) {\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n      }\n    }\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var options = this.container.actualOptions;\n      var events = options.interactivity.events;\n      var onHover = events.onHover;\n      var onClick = events.onClick;\n      var hoverEnabled = onHover.enable;\n      var hoverMode = onHover.mode;\n      var clickEnabled = onClick.enable;\n      var clickMode = onClick.mode;\n      var divs = events.onDiv;\n\n      if (hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n        this.hoverBubble();\n      } else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n        this.clickBubble();\n      } else {\n        Utils_1.divModeExecute(Enums_1.DivMode.bubble, divs, function (selector, div) {\n          return _this.singleSelectorHover(selector, div);\n        });\n      }\n    }\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this2 = this;\n\n      var container = this.container;\n      var selectors = document.querySelectorAll(selector);\n\n      if (!selectors.length) {\n        return;\n      }\n\n      selectors.forEach(function (item) {\n        var elem = item;\n        var pxRatio = container.retina.pixelRatio;\n        var pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        };\n        var repulseRadius = elem.offsetWidth / 2 * pxRatio;\n        var area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n        var query = container.particles.quadTree.query(area);\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = Utils_1.divMode(divs, elem);\n\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this2.reset(particle, true);\n\n              particle.bubble.div = elem;\n            }\n\n            _this2.hoverBubbleSize(particle, 1, divBubble);\n\n            _this2.hoverBubbleOpacity(particle, 1, divBubble);\n\n            _this2.hoverBubbleColor(particle, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container;\n      var bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      var options = container.actualOptions;\n      var bubbleDuration = options.interactivity.modes.bubble.duration;\n      var bubbleDistance = container.retina.bubbleModeDistance;\n      var particlesParam = data.particlesObj.optValue;\n      var pObjBubble = data.bubbleObj.value;\n      var pObj = data.particlesObj.value || 0;\n      var type = data.type;\n\n      if (bubbleParam !== particlesParam) {\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= bubbleDistance) {\n            var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n            if (obj !== bubbleParam) {\n              var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n              if (type === Enums_1.ProcessBubbleType.size) {\n                particle.bubble.radius = value;\n              }\n\n              if (type === Enums_1.ProcessBubbleType.opacity) {\n                particle.bubble.opacity = value;\n              }\n            }\n          } else {\n            if (type === Enums_1.ProcessBubbleType.size) {\n              delete particle.bubble.radius;\n            }\n\n            if (type === Enums_1.ProcessBubbleType.opacity) {\n              delete particle.bubble.opacity;\n            }\n          }\n        } else if (pObjBubble) {\n          if (type === Enums_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === Enums_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance;\n      var query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          if (!container.bubble.clicking) {\n            continue;\n          }\n\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition();\n          var distMouse = Utils_1.getDistance(pos, mouseClickPos);\n          var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: Enums_1.ProcessBubbleType.size\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: Utils_1.getRangeMax(particle.options.opacity.value),\n              value: particle.opacity.value\n            },\n            type: Enums_1.ProcessBubbleType.opacity\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance;\n      var query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n      var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition();\n          var pointDistance = Utils_1.getDistance(pos, mousePos);\n          var ratio = 1 - pointDistance / distance;\n\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle);\n            }\n          } else {\n            this.reset(particle);\n          }\n\n          if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container;\n      var modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      var optSize = Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a;\n\n      var options = this.container.actualOptions;\n      var modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (modeOpacity === undefined) {\n        return;\n      }\n\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = particle.opacity.value;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, Utils_1.getRangeMax(optOpacity), ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, divBubble) {\n      var _a;\n\n      var options = this.container.actualOptions;\n\n      if (particle.bubble.color === undefined) {\n        var modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n\n        if (modeColor === undefined) {\n          return;\n        }\n\n        var bubbleColor = modeColor instanceof Array ? Utils_1.itemFromArray(modeColor) : modeColor;\n        particle.bubble.color = Utils_1.colorToHsl(bubbleColor);\n      }\n    }\n  }]);\n\n  return Bubbler;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Bubbler = Bubbler;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Interactions/External/Bubbler.js"],"names":["Object","defineProperty","exports","value","Bubbler","Utils_1","require","Enums_1","ExternalInteractorBase_1","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","size","clamp","container","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","isDivModeEnabled","DivMode","bubble","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","particle","force","inRange","div","opacity","radius","color","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","selector","singleSelectorHover","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","query","particles","quadTree","contains","getPosition","modes","divMode","reset","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","ProcessBubbleType","mouseClickPos","distance","queryCircle","clicking","getDistance","Date","getTime","clickTime","sizeData","bubbleModeSize","getRangeMax","process","opacityData","mousePos","pointDistance","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","_a","modeOpacity","optOpacity","pOpacity","modeColor","bubbleColor","Array","itemFromArray","colorToHsl","ExternalInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"../../Enums\");\nconst ExternalInteractorBase_1 = require(\"../../Core/ExternalInteractorBase\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n        const size = particleValue + (modeValue - optionsValue) * ratio;\n        return Utils_1.clamp(size, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const size = particleValue - (optionsValue - modeValue) * ratio;\n        return Utils_1.clamp(size, modeValue, particleValue);\n    }\n}\nclass Bubbler extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divBubble = Utils_1.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return Utils_1.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!particle.bubble.inRange || force) {\n            delete particle.bubble.div;\n            delete particle.bubble.opacity;\n            delete particle.bubble.radius;\n            delete particle.bubble.color;\n        }\n    }\n    interact() {\n        const options = this.container.actualOptions;\n        const events = options.interactivity.events;\n        const onHover = events.onHover;\n        const onClick = events.onClick;\n        const hoverEnabled = onHover.enable;\n        const hoverMode = onHover.mode;\n        const clickEnabled = onClick.enable;\n        const clickMode = onClick.mode;\n        const divs = events.onDiv;\n        if (hoverEnabled && Utils_1.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            Utils_1.divModeExecute(Enums_1.DivMode.bubble, divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container;\n        const selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = Utils_1.divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container;\n        const bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === Enums_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === Enums_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition();\n            const distMouse = Utils_1.getDistance(pos, mouseClickPos);\n            const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: Enums_1.ProcessBubbleType.size,\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: Utils_1.getRangeMax(particle.options.opacity.value),\n                    value: particle.opacity.value,\n                },\n                type: Enums_1.ProcessBubbleType.opacity,\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const pointDistance = Utils_1.getDistance(pos, mousePos);\n            const ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container;\n        const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size)\n            ? divBubble.size * container.retina.pixelRatio\n            : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = Utils_1.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = particle.opacity.value;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, Utils_1.getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, divBubble) {\n        var _a;\n        const options = this.container.actualOptions;\n        if (particle.bubble.color === undefined) {\n            const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? Utils_1.itemFromArray(modeColor) : modeColor;\n            particle.bubble.color = Utils_1.colorToHsl(bubbleColor);\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"]},"metadata":{},"sourceType":"script"}