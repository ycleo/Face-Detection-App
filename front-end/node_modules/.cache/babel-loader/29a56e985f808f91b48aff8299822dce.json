{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Utils_2 = require(\"../Utils\");\n\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas, generatedCanvas) {\n      var _a;\n\n      if (!canvas.className) {\n        canvas.className = Utils_1.Constants.canvasClass;\n      }\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.safePaint(function (ctx) {\n        Utils_2.clear(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n\n      var options = this.container.actualOptions;\n      this.safePaint(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover && _this2.coverColor) {\n          Utils_2.clear(ctx, _this2.size);\n\n          _this2.paintBase(Utils_1.getStyleFromRgb(_this2.coverColor, _this2.coverColor.a));\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n\n      var options = this.container.actualOptions;\n      var trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.safePaint(function (ctx) {\n          Utils_2.clear(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function windowResize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      this.resize();\n      container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n      container.particles.setDensity();\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.resize !== undefined) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      var pxRatio = container.retina.pixelRatio;\n      var size = container.canvas.size;\n      var oldSize = {\n        width: size.width,\n        height: size.height\n      };\n      size.width = this.element.offsetWidth * pxRatio;\n      size.height = this.element.offsetHeight * pxRatio;\n      this.element.width = size.width;\n      this.element.height = size.height;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n\n      this.safePaint(function (ctx) {\n        var _a;\n\n        var lineStyle = _this4.lineStyle(p1, p2);\n\n        if (!lineStyle) {\n          return;\n        }\n\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.safePaint(function (ctx) {\n        var _a;\n\n        var beginPos = particle.getPosition();\n        Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticleShadow\",\n    value: function drawParticleShadow(particle, mousePos) {\n      var _this5 = this;\n\n      this.safePaint(function (ctx) {\n        Utils_1.drawParticleShadow(_this5.container, ctx, particle, mousePos);\n      });\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(p1, link1, link2) {\n      var _a;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link1.destination;\n      var p3 = link2.destination;\n      var triangleOptions = p1.options.links.triangles;\n      var opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n      if (opacityTriangle <= 0) {\n        return;\n      }\n\n      this.safePaint(function (ctx) {\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        var pos3 = p3.getPosition();\n\n        if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance || Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n          return;\n        }\n\n        var colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n\n        if (!colorTriangle) {\n          var linksOptions = p1.options.links;\n          var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n\n          if (!colorTriangle) {\n            return;\n          }\n        }\n\n        Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n      });\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(p1, link) {\n      var container = this.container;\n      var options = container.actualOptions;\n      var p2 = link.destination;\n      var opacity = link.opacity;\n      var pos1 = p1.getPosition();\n      var pos2 = p2.getPosition();\n      this.safePaint(function (ctx) {\n        var _a, _b;\n\n        var colorLine;\n        var twinkle = p1.options.twinkle.lines;\n\n        if (twinkle.enable) {\n          var twinkleFreq = twinkle.frequency;\n          var twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n          var twinkling = Math.random() < twinkleFreq;\n\n          if (twinkling && twinkleRgb !== undefined) {\n            colorLine = twinkleRgb;\n            opacity = twinkle.opacity;\n          }\n        }\n\n        if (!colorLine) {\n          var linksOptions = p1.options.links;\n          var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n          colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n        }\n\n        if (!colorLine) {\n          return;\n        }\n\n        var width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        var maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n        Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this6 = this;\n\n      var _a, _b, _c, _d;\n\n      if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor();\n      var psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      var pOptions = particle.options;\n      var twinkle = pOptions.twinkle.particles;\n      var twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n\n      if (!fColor || !sColor) {\n        var twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n\n        if (!fColor) {\n          fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n        }\n\n        if (!sColor) {\n          sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n        }\n      }\n\n      var options = this.container.actualOptions;\n      var zIndexOptions = particle.options.zIndex;\n      var zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n      var radius = particle.getRadius();\n      var opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n      var strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n      var zOpacity = opacity * zOpacityFactor;\n      var fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n\n      if (!fillColorValue && !sColor) {\n        return;\n      }\n\n      this.safePaint(function (ctx) {\n        var zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n        var zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        var strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n\n        _this6.drawParticleLinks(particle);\n\n        if (radius > 0) {\n          Utils_1.drawParticle(_this6.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n        }\n      });\n    }\n  }, {\n    key: \"drawParticleLinks\",\n    value: function drawParticleLinks(particle) {\n      var _this7 = this;\n\n      this.safePaint(function (ctx) {\n        var container = _this7.container;\n        var particles = container.particles;\n        var pOptions = particle.options;\n\n        if (particle.links.length > 0) {\n          ctx.save();\n          var p1Links = particle.links.filter(function (l) {\n            var linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n            return linkFreq <= pOptions.links.frequency;\n          });\n\n          var _iterator2 = _createForOfIteratorHelper(p1Links),\n              _step2;\n\n          try {\n            var _loop = function _loop() {\n              var link = _step2.value;\n              var p2 = link.destination;\n\n              if (pOptions.links.triangles.enable) {\n                var links = p1Links.map(function (l) {\n                  return l.destination;\n                });\n                var vertices = p2.links.filter(function (t) {\n                  var linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                  return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                });\n\n                if (vertices.length) {\n                  var _iterator3 = _createForOfIteratorHelper(vertices),\n                      _step3;\n\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var vertex = _step3.value;\n                      var p3 = vertex.destination;\n                      var triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n\n                      if (triangleFreq > pOptions.links.triangles.frequency) {\n                        continue;\n                      }\n\n                      _this7.drawLinkTriangle(particle, link, vertex);\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n                }\n              }\n\n              if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                _this7.drawLinkLine(particle, link);\n              }\n            };\n\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          ctx.restore();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.safePaint(function (ctx) {\n        Utils_1.drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawLight\",\n    value: function drawLight(mousePos) {\n      var _this8 = this;\n\n      this.safePaint(function (ctx) {\n        Utils_1.drawLight(_this8.container, ctx, mousePos);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions;\n      var background = options.background;\n      var element = this.element;\n      var elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = Utils_1.colorToRgb(background.color);\n        elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions;\n      var cover = options.backgroundMask.cover;\n      var color = cover.color;\n      var coverRgb = Utils_1.colorToRgb(color);\n\n      if (coverRgb) {\n        this.coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions;\n      var trail = options.particles.move.trail;\n      var fillColor = Utils_1.colorToRgb(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor;\n      var sColor;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      var originalStyle = this.originalStyle;\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = Utils_1.deepExtend({}, element.style);\n        element.style.position = \"fixed\";\n        element.style.zIndex = options.fullScreen.zIndex.toString(10);\n        element.style.top = \"0\";\n        element.style.left = \"0\";\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this9 = this;\n\n      this.safePaint(function (ctx) {\n        Utils_1.paintBase(ctx, _this9.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this10 = this;\n\n      return this.safePaint(function (ctx) {\n        var options = _this10.container.actualOptions;\n        var connectOptions = options.interactivity.modes.connect;\n        return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }, {\n    key: \"safePaint\",\n    value: function safePaint(cb) {\n      if (!this.context) {\n        return;\n      }\n\n      return cb(this.context);\n    }\n  }]);\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","container","size","height","width","context","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","init","safePaint","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","setResponsive","pixelRatio","setDensity","plugins","plugin","undefined","pxRatio","oldSize","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","drawConnectLine","linksWidth","particle","lineColor","opacity","mousePos","beginPos","drawGrabLine","drawParticleShadow","link1","link2","destination","p3","triangleOptions","links","triangles","opacityTriangle","pos3","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","linksColors","get","linksColor","getLinkColor","drawLinkTriangle","composite","link","_b","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","maxDistance","drawLinkLine","warp","shadow","delta","_c","_d","image","loaded","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","pOptions","colorToHsl","zIndexOptions","zIndex","zOpacityFactor","opacityRate","zIndexFactor","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","drawParticleLinks","drawParticle","save","p1Links","filter","l","linkFreq","getLinkFrequency","map","vertices","t","indexOf","vertex","triangleFreq","getTriangleFrequency","restore","drawPlugin","drawLight","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","gradient","cb"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = Utils_1.deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.safePaint((ctx) => {\n            Utils_2.clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.safePaint((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                Utils_2.clear(ctx, this.size);\n                this.paintBase(Utils_1.getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.safePaint((ctx) => {\n                Utils_2.clear(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        container.actualOptions.setResponsive(this.size.width, container.retina.pixelRatio, container.options);\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.safePaint((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            Utils_1.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.safePaint((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            Utils_1.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticleShadow(particle, mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawParticleShadow(this.container, ctx, particle, mousePos);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link1.destination;\n        const p3 = link2.destination;\n        const triangleOptions = p1.options.links.triangles;\n        const opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            const pos3 = p3.getPosition();\n            if (Utils_1.getDistance(pos1, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos2) > container.retina.linksDistance ||\n                Utils_1.getDistance(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = Utils_1.colorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = Utils_1.getLinkColor(p1, p2, linkColor);\n                if (!colorTriangle) {\n                    return;\n                }\n            }\n            Utils_1.drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container;\n        const options = container.actualOptions;\n        const p2 = link.destination;\n        let opacity = link.opacity;\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        this.safePaint((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency;\n                const twinkleRgb = Utils_1.colorToRgb(twinkle.color);\n                const twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb !== undefined) {\n                    colorLine = twinkleRgb;\n                    opacity = twinkle.opacity;\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links;\n                const linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = Utils_1.getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n            const maxDistance = (_b = p1.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            Utils_1.drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d;\n        if (((_a = particle.image) === null || _a === void 0 ? void 0 : _a.loaded) === false || particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_b = particle.getStrokeColor()) !== null && _b !== void 0 ? _b : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = Utils_1.colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = 1 - zIndexOptions.opacityRate * particle.zIndexFactor;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_c = particle.bubble.opacity) !== null && _c !== void 0 ? _c : particle.opacity.value;\n        const strokeOpacity = (_d = particle.stroke.opacity) !== null && _d !== void 0 ? _d : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? Utils_1.getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.safePaint((ctx) => {\n            const zSizeFactor = 1 - zIndexOptions.sizeRate * particle.zIndexFactor;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? Utils_1.getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            this.drawParticleLinks(particle);\n            if (radius > 0) {\n                Utils_1.drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            }\n        });\n    }\n    drawParticleLinks(particle) {\n        this.safePaint((ctx) => {\n            const container = this.container;\n            const particles = container.particles;\n            const pOptions = particle.options;\n            if (particle.links.length > 0) {\n                ctx.save();\n                const p1Links = particle.links.filter((l) => {\n                    const linkFreq = container.particles.getLinkFrequency(particle, l.destination);\n                    return linkFreq <= pOptions.links.frequency;\n                });\n                for (const link of p1Links) {\n                    const p2 = link.destination;\n                    if (pOptions.links.triangles.enable) {\n                        const links = p1Links.map((l) => l.destination);\n                        const vertices = p2.links.filter((t) => {\n                            const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                            return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                        });\n                        if (vertices.length) {\n                            for (const vertex of vertices) {\n                                const p3 = vertex.destination;\n                                const triangleFreq = particles.getTriangleFrequency(particle, p2, p3);\n                                if (triangleFreq > pOptions.links.triangles.frequency) {\n                                    continue;\n                                }\n                                this.drawLinkTriangle(particle, link, vertex);\n                            }\n                        }\n                    }\n                    if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                        this.drawLinkLine(particle, link);\n                    }\n                }\n                ctx.restore();\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.safePaint((ctx) => {\n            Utils_1.drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawLight(mousePos) {\n        this.safePaint((ctx) => {\n            Utils_1.drawLight(this.container, ctx, mousePos);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = Utils_1.colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? Utils_1.getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = Utils_1.colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = Utils_1.colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = Utils_1.colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = Utils_1.colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = Utils_1.deepExtend({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.safePaint((ctx) => {\n            Utils_1.paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.safePaint((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return Utils_1.gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n    safePaint(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n}\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}