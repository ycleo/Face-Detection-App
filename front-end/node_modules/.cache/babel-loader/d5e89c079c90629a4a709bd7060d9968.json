{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadInfectionPlugin = void 0;\n\nvar InfectionInstance_1 = require(\"./InfectionInstance\");\n\nvar ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\n\nvar Infection_1 = require(\"./Options/Classes/Infection\");\n\nvar Plugin = /*#__PURE__*/function () {\n  function Plugin() {\n    _classCallCheck(this, Plugin);\n\n    this.id = \"infection\";\n  }\n\n  _createClass(Plugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new InfectionInstance_1.InfectionInstance(container);\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _a, _b;\n\n      return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      if (!this.needsPlugin(source)) {\n        return;\n      }\n\n      var optionsCast = options;\n      var infectionOptions = optionsCast.infection;\n\n      if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n        optionsCast.infection = infectionOptions = new Infection_1.Infection();\n      }\n\n      infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n    }\n  }]);\n\n  return Plugin;\n}();\n\nfunction loadInfectionPlugin(tsParticles) {\n  var plugin = new Plugin();\n  tsParticles.addPlugin(plugin);\n  tsParticles.addInteractor(\"particlesInfection\", function (container) {\n    return new ParticlesInfecter_1.ParticlesInfecter(container);\n  });\n}\n\nexports.loadInfectionPlugin = loadInfectionPlugin;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Plugins/Infection/plugin.js"],"names":["Object","defineProperty","exports","value","loadInfectionPlugin","InfectionInstance_1","require","ParticlesInfecter_1","Infection_1","Plugin","id","container","InfectionInstance","options","_a","_b","infection","enable","source","needsPlugin","optionsCast","infectionOptions","load","undefined","Infection","tsParticles","plugin","addPlugin","addInteractor","ParticlesInfecter"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,qBAAD,CAAnC;;AACA,IAAMC,mBAAmB,GAAGD,OAAO,CAAC,qBAAD,CAAnC;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,6BAAD,CAA3B;;IACMG,M;AACF,oBAAc;AAAA;;AACV,SAAKC,EAAL,GAAU,WAAV;AACH;;;;WACD,mBAAUC,SAAV,EAAqB;AACjB,aAAO,IAAIN,mBAAmB,CAACO,iBAAxB,CAA0CD,SAA1C,CAAP;AACH;;;WACD,qBAAYE,OAAZ,EAAqB;AACjB,UAAIC,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,SAAhE,MAA+E,IAA/E,IAAuFF,EAAE,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgHA,EAAE,CAACG,MAAzH,MAAqI,IAArI,IAA6IF,EAAE,KAAK,KAAK,CAAzJ,GAA6JA,EAA7J,GAAkK,KAAzK;AACH;;;WACD,qBAAYF,OAAZ,EAAqBK,MAArB,EAA6B;AACzB,UAAI,CAAC,KAAKC,WAAL,CAAiBD,MAAjB,CAAL,EAA+B;AAC3B;AACH;;AACD,UAAME,WAAW,GAAGP,OAApB;AACA,UAAIQ,gBAAgB,GAAGD,WAAW,CAACJ,SAAnC;;AACA,UAAI,CAACK,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACC,IAAtF,MAAgGC,SAApG,EAA+G;AAC3GH,QAAAA,WAAW,CAACJ,SAAZ,GAAwBK,gBAAgB,GAAG,IAAIb,WAAW,CAACgB,SAAhB,EAA3C;AACH;;AACDH,MAAAA,gBAAgB,CAACC,IAAjB,CAAsBJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACF,SAA7E;AACH;;;;;;AAEL,SAASZ,mBAAT,CAA6BqB,WAA7B,EAA0C;AACtC,MAAMC,MAAM,GAAG,IAAIjB,MAAJ,EAAf;AACAgB,EAAAA,WAAW,CAACE,SAAZ,CAAsBD,MAAtB;AACAD,EAAAA,WAAW,CAACG,aAAZ,CAA0B,oBAA1B,EAAgD,UAACjB,SAAD;AAAA,WAAe,IAAIJ,mBAAmB,CAACsB,iBAAxB,CAA0ClB,SAA1C,CAAf;AAAA,GAAhD;AACH;;AACDT,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadInfectionPlugin = void 0;\nconst InfectionInstance_1 = require(\"./InfectionInstance\");\nconst ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\nconst Infection_1 = require(\"./Options/Classes/Infection\");\nclass Plugin {\n    constructor() {\n        this.id = \"infection\";\n    }\n    getPlugin(container) {\n        return new InfectionInstance_1.InfectionInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let infectionOptions = optionsCast.infection;\n        if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n            optionsCast.infection = infectionOptions = new Infection_1.Infection();\n        }\n        infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n    }\n}\nfunction loadInfectionPlugin(tsParticles) {\n    const plugin = new Plugin();\n    tsParticles.addPlugin(plugin);\n    tsParticles.addInteractor(\"particlesInfection\", (container) => new ParticlesInfecter_1.ParticlesInfecter(container));\n}\nexports.loadInfectionPlugin = loadInfectionPlugin;\n"]},"metadata":{},"sourceType":"script"}