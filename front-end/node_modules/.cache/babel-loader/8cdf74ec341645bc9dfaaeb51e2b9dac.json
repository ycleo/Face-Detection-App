{"ast":null,"code":"var _jsxFileName = \"/Users/a1234/Desktop/projects/face-detection-app/front-end/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'd0a2ab07bf7e439db2b9281fd0f5f603'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions.map(region => region.region_info.bounding_box);\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return clarifaiFace.map(face => {\n        return {\n          leftCol: face.left_col * width,\n          topRow: face.top_row * height,\n          rightCol: width - face.right_col * width,\n          bottomRow: height - face.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('a403429f2ddf4b49b307e318f00e528b', this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3003/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }) // console.log(response.outputs[0].data.regions[0].region_info.bounding_box); \n      .catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/front-end/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","Rank","ImageLinkForm","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","map","region","region_info","bounding_box","image","document","getElementById","width","Number","height","face","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\n\n\nconst app = new Clarifai.App({\n  apiKey: 'd0a2ab07bf7e439db2b9281fd0f5f603'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: { \n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions.map(region => region.region_info.bounding_box);\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return clarifaiFace.map(face => {\n      return {\n        leftCol: face.left_col * width,\n        topRow: face.top_row * height,\n        rightCol: width - (face.right_col * width),\n        bottomRow: height - (face.bottom_row * height)\n      }\n    });\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({boxes: boxes})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});  \n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n      'a403429f2ddf4b49b307e318f00e528b', \n       this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3003/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState( Object.assign(this.state.user, {entries: count}) )\n          })\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n        // console.log(response.outputs[0].data.regions[0].region_info.bounding_box); \n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    const { isSignedIn, imageUrl, route, boxes } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n          \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n            ? <div>\n                <Logo />\n                <Rank \n                  name={this.state.user.name}\n                  entries={this.state.user.entries}\n                />\n                <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}/>\n                \n                <FaceRecognition boxes={boxes} imageUrl={imageUrl}/>\n              </div>\n            : (\n              route === 'signin' \n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n            \n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}