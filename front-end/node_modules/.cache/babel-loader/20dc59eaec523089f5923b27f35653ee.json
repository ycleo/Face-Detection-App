{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/a1234/Desktop/projects/face-detection-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InfectionInstance = void 0;\n\nvar Infecter_1 = require(\"./Infecter\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar InfectionInstance = /*#__PURE__*/function () {\n  function InfectionInstance(container) {\n    _classCallCheck(this, InfectionInstance);\n\n    this.container = container;\n    this.container.infecter = new Infecter_1.Infecter(this.container);\n  }\n\n  _createClass(InfectionInstance, [{\n    key: \"particlesSetup\",\n    value: function particlesSetup() {\n      var _a;\n\n      var options = this.container.actualOptions;\n\n      for (var i = 0; i < options.infection.infections; i++) {\n        var notInfected = this.container.particles.array.filter(function (p) {\n          var infP = p;\n\n          if (!infP.infection) {\n            infP.infection = {};\n          }\n\n          return infP.infection.stage === undefined;\n        });\n        var infected = Utils_1.itemFromArray(notInfected);\n        (_a = this.container.infecter) === null || _a === void 0 ? void 0 : _a.startInfection(infected, 0);\n      }\n    }\n  }, {\n    key: \"particleFillColor\",\n    value: function particleFillColor(particle) {\n      var infParticle = particle;\n      var options = this.container.actualOptions;\n\n      if (!infParticle.infection) {\n        return;\n      }\n\n      var infectionStage = infParticle.infection.stage;\n      var infection = options.infection;\n      var infectionStages = infection.stages;\n      return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n  }, {\n    key: \"particleStrokeColor\",\n    value: function particleStrokeColor(particle) {\n      return this.particleFillColor(particle);\n    }\n  }]);\n\n  return InfectionInstance;\n}();\n\nexports.InfectionInstance = InfectionInstance;","map":{"version":3,"sources":["/Users/a1234/Desktop/projects/face-detection-app/node_modules/tsparticles/Plugins/Infection/InfectionInstance.js"],"names":["Object","defineProperty","exports","value","InfectionInstance","Infecter_1","require","Utils_1","container","infecter","Infecter","_a","options","actualOptions","i","infection","infections","notInfected","particles","array","filter","p","infP","stage","undefined","infected","itemFromArray","startInfection","particle","infParticle","infectionStage","infectionStages","stages","color","particleFillColor"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;IACMF,iB;AACF,6BAAYI,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKA,SAAL,CAAeC,QAAf,GAA0B,IAAIJ,UAAU,CAACK,QAAf,CAAwB,KAAKF,SAA7B,CAA1B;AACH;;;;WACD,0BAAiB;AACb,UAAIG,EAAJ;;AACA,UAAMC,OAAO,GAAG,KAAKJ,SAAL,CAAeK,aAA/B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,SAAR,CAAkBC,UAAtC,EAAkDF,CAAC,EAAnD,EAAuD;AACnD,YAAMG,WAAW,GAAG,KAAKT,SAAL,CAAeU,SAAf,CAAyBC,KAAzB,CAA+BC,MAA/B,CAAsC,UAACC,CAAD,EAAO;AAC7D,cAAMC,IAAI,GAAGD,CAAb;;AACA,cAAI,CAACC,IAAI,CAACP,SAAV,EAAqB;AACjBO,YAAAA,IAAI,CAACP,SAAL,GAAiB,EAAjB;AACH;;AACD,iBAAOO,IAAI,CAACP,SAAL,CAAeQ,KAAf,KAAyBC,SAAhC;AACH,SANmB,CAApB;AAOA,YAAMC,QAAQ,GAAGlB,OAAO,CAACmB,aAAR,CAAsBT,WAAtB,CAAjB;AACA,SAACN,EAAE,GAAG,KAAKH,SAAL,CAAeC,QAArB,MAAmC,IAAnC,IAA2CE,EAAE,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,EAAE,CAACgB,cAAH,CAAkBF,QAAlB,EAA4B,CAA5B,CAApE;AACH;AACJ;;;WACD,2BAAkBG,QAAlB,EAA4B;AACxB,UAAMC,WAAW,GAAGD,QAApB;AACA,UAAMhB,OAAO,GAAG,KAAKJ,SAAL,CAAeK,aAA/B;;AACA,UAAI,CAACgB,WAAW,CAACd,SAAjB,EAA4B;AACxB;AACH;;AACD,UAAMe,cAAc,GAAGD,WAAW,CAACd,SAAZ,CAAsBQ,KAA7C;AACA,UAAMR,SAAS,GAAGH,OAAO,CAACG,SAA1B;AACA,UAAMgB,eAAe,GAAGhB,SAAS,CAACiB,MAAlC;AACA,aAAOF,cAAc,KAAKN,SAAnB,GAA+BO,eAAe,CAACD,cAAD,CAAf,CAAgCG,KAA/D,GAAuET,SAA9E;AACH;;;WACD,6BAAoBI,QAApB,EAA8B;AAC1B,aAAO,KAAKM,iBAAL,CAAuBN,QAAvB,CAAP;AACH;;;;;;AAEL1B,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InfectionInstance = void 0;\nconst Infecter_1 = require(\"./Infecter\");\nconst Utils_1 = require(\"../../Utils\");\nclass InfectionInstance {\n    constructor(container) {\n        this.container = container;\n        this.container.infecter = new Infecter_1.Infecter(this.container);\n    }\n    particlesSetup() {\n        var _a;\n        const options = this.container.actualOptions;\n        for (let i = 0; i < options.infection.infections; i++) {\n            const notInfected = this.container.particles.array.filter((p) => {\n                const infP = p;\n                if (!infP.infection) {\n                    infP.infection = {};\n                }\n                return infP.infection.stage === undefined;\n            });\n            const infected = Utils_1.itemFromArray(notInfected);\n            (_a = this.container.infecter) === null || _a === void 0 ? void 0 : _a.startInfection(infected, 0);\n        }\n    }\n    particleFillColor(particle) {\n        const infParticle = particle;\n        const options = this.container.actualOptions;\n        if (!infParticle.infection) {\n            return;\n        }\n        const infectionStage = infParticle.infection.stage;\n        const infection = options.infection;\n        const infectionStages = infection.stages;\n        return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n    particleStrokeColor(particle) {\n        return this.particleFillColor(particle);\n    }\n}\nexports.InfectionInstance = InfectionInstance;\n"]},"metadata":{},"sourceType":"script"}